<%= form_for Item.new do |form| %>
  <%= form.text_field :title, placeholder: 'Title' %>
  <%= form.text_field :address %>
  <%= form.text_field :latitude %>
  <%= form.text_field :longitude %>
  <input id="pac-input" class="controls" type="text"
        placeholder="Enter a location">

  <div class="map-wrapper">
    <div id="map"></div>
  </div>

 <%= form.submit 'Save' %>
<% end %>

<script>
  function initMap() {
    var geocoder = new google.maps.Geocoder;
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -33.8688, lng: 151.2195},
      zoom: 13
    });
    var input = /** @type {!HTMLInputElement} */(
        document.getElementById('pac-input'));

    var types = document.getElementById('type-selector');
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);

    var infowindow = new google.maps.InfoWindow();
    var marker = new google.maps.Marker({
      map: map,
      draggable: true,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        window.alert("Autocomplete's returned place contains no geometry");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setIcon(/** @type {google.maps.Icon} */({
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(35, 35)
      }));
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);


      
      // document.getElementById('item_address').value = place.formatted_address;
      document.getElementById('item_latitude').value = place.geometry.location.lat();
      document.getElementById('item_longitude').value = place.geometry.location.lng();

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }
      document.getElementById('item_address').value = address;

      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, marker);
    });
    
    google.maps.event.addListener(marker, 'dragend', function (event) {
      var newLat = event.latLng.lat();
      var newLng = event.latLng.lng();
      document.getElementById('item_latitude').value = newLat;
      document.getElementById('item_longitude').value = newLng;
      var updatedLatLng = {lat: newLat, lng: newLng};

      geocoder.geocode({'location': updatedLatLng}, function(results, status){
        if(status === 'OK') { 
          // if(results[1]) {
          //   map.setZoom(11);
          //   var marker
          // }
          var newAdd = results[1].formatted_address;
          console.log(newAdd);
          document.getElementById('pac-input').value = newAdd; 
        }
      });
      
      //document.getElementById('item_address').value = event.place.formatted_address;
    });
  }
</script>
<script src='https://maps.googleapis.com/maps/api/js?key=AIzaSyA8-kcH_41g9dKm1lKREjiW_8c9V3LvbcE&libraries=places&callback=initMap'
        async defer></script>